use Mix.Config

secret_key_base =
  System.get_env("SECRET_KEY_BASE") ||
    raise """
    environment variable SECRET_KEY_BASE is missing.
    You can generate one by calling: mix phx.gen.secret
    """

spotify_client_id =
  System.get_env("SPOTIFY_CLIENT_ID") ||
    raise """
    environment variable SPOTIFY_CLIENT_ID is missing.
    """

spotify_secret_key =
  System.get_env("SPOTIFY_SECRET_KEY") ||
    raise """
    environment variable SPOTIFY_SECRET_KEY is missing.
    """

database_url =
  System.get_env("DATABASE_URL") ||
    raise """
    environment variable DATABASE_URL is missing.
    For example: ecto://USER:PASS@HOST/DATABASE
    """

port = String.to_integer(System.get_env("PORT") || "4000")
pool_size = String.to_integer(System.get_env("POOL_SIZE") || "2")

# For production, don't forget to configure the url host
# to something meaningful, Phoenix uses this information
# when generating URLs.
#
# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix phx.digest` task,
# which you should run after static files are built and
# before starting your production server.
config :spot_on, SpotOnWeb.Endpoint,
  http: [port: port, transport_options: [socket_opts: [:inet6]]],
  url: [
    host: System.get_env("URL_HOST", "localhost"),
    port: System.get_env("URL_PORT", "80")
  ],
  cache_static_manifest: "priv/static/cache_manifest.json",
  secret_key_base: Map.fetch!(System.get_env(), "SECRET_KEY_BASE"),
  server: true

config :spot_on, SpotOn.Repo,
  database: "spot-on",
  url: database_url,
  port: 5435,
  ssl: true,
  pool_size: pool_size

config :spot_on,
  client_id: spotify_client_id,
  secret_key: spotify_secret_key

# Do not print debug messages in production
config :logger, level: :info

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :spot_on, SpotOnWeb.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [
#         port: 443,
#         cipher_suite: :strong,
#         keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#         certfile: System.get_env("SOME_APP_SSL_CERT_PATH"),
#         transport_options: [socket_opts: [:inet6]]
#       ]
#
# The `cipher_suite` is set to `:strong` to support only the
# latest and more secure SSL ciphers. This means old browsers
# and clients may not be supported. You can set it to
# `:compatible` for wider support.
#
# `:keyfile` and `:certfile` expect an absolute path to the key
# and cert in disk or a relative path inside priv, for example
# "priv/ssl/server.key". For all supported SSL configuration
# options, see https://hexdocs.pm/plug/Plug.SSL.html#configure/1
#
# We also recommend setting `force_ssl` in your endpoint, ensuring
# no data is ever sent via http, always redirecting to https:
#
#     config :spot_on, SpotOnWeb.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.
